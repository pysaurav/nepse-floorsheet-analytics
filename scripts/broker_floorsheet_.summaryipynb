{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\r\n",
    "from matplotlib.pyplot import figure\r\n",
    "from datetime import datetime\r\n",
    "import seaborn as sns\r\n",
    "import pandas as pd\r\n",
    "import os "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "filename = \"floorsheet_{}.csv\".format(datetime.today().strftime('%Y_%m_%d'))\r\n",
    "data = pd.read_csv(os.path.join('..','data','floorsheet',filename),index_col=0) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['BuyerBroker'] = data['BuyerBroker'].apply(lambda x:str(x))\n",
    "data['SellerBroker'] = data['SellerBroker'].apply(lambda x:str(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.N</th>\n",
       "      <th>ContractNo</th>\n",
       "      <th>StockSymbol</th>\n",
       "      <th>BuyerBroker</th>\n",
       "      <th>SellerBroker</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Rate</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2021070604015212</td>\n",
       "      <td>SPDL</td>\n",
       "      <td>13</td>\n",
       "      <td>26</td>\n",
       "      <td>22</td>\n",
       "      <td>396.0</td>\n",
       "      <td>8712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2021070601012192</td>\n",
       "      <td>NABIL</td>\n",
       "      <td>56</td>\n",
       "      <td>44</td>\n",
       "      <td>34</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>44234.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2021070601012191</td>\n",
       "      <td>NABIL</td>\n",
       "      <td>56</td>\n",
       "      <td>58</td>\n",
       "      <td>45</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>58545.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2021070601012190</td>\n",
       "      <td>NABIL</td>\n",
       "      <td>56</td>\n",
       "      <td>11</td>\n",
       "      <td>21</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>27321.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2021070603018894</td>\n",
       "      <td>NIFRA</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>484.0</td>\n",
       "      <td>4840.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   S.N        ContractNo StockSymbol BuyerBroker SellerBroker  Quantity  \\\n",
       "0    1  2021070604015212        SPDL          13           26        22   \n",
       "1    2  2021070601012192       NABIL          56           44        34   \n",
       "2    3  2021070601012191       NABIL          56           58        45   \n",
       "3    4  2021070601012190       NABIL          56           11        21   \n",
       "4    5  2021070603018894       NIFRA          45            4        10   \n",
       "\n",
       "     Rate   Amount  \n",
       "0   396.0   8712.0  \n",
       "1  1301.0  44234.0  \n",
       "2  1301.0  58545.0  \n",
       "3  1301.0  27321.0  \n",
       "4   484.0   4840.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.N</th>\n",
       "      <th>ContractNo</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>Rate</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>46310.00000</td>\n",
       "      <td>4.631000e+04</td>\n",
       "      <td>46310.000000</td>\n",
       "      <td>46310.000000</td>\n",
       "      <td>4.631000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>23155.50000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>218.855733</td>\n",
       "      <td>960.878530</td>\n",
       "      <td>9.121180e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>13368.68982</td>\n",
       "      <td>1.159891e+06</td>\n",
       "      <td>2844.216118</td>\n",
       "      <td>1589.995055</td>\n",
       "      <td>5.284124e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.00000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.900000</td>\n",
       "      <td>2.760000e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>11578.25000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>402.000000</td>\n",
       "      <td>1.302000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>23155.50000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>3.301000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>34732.75000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>8.080000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>46310.00000</td>\n",
       "      <td>2.021071e+15</td>\n",
       "      <td>484850.000000</td>\n",
       "      <td>22396.000000</td>\n",
       "      <td>5.280000e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               S.N    ContractNo       Quantity          Rate        Amount\n",
       "count  46310.00000  4.631000e+04   46310.000000  46310.000000  4.631000e+04\n",
       "mean   23155.50000  2.021071e+15     218.855733    960.878530  9.121180e+04\n",
       "std    13368.68982  1.159891e+06    2844.216118   1589.995055  5.284124e+05\n",
       "min        1.00000  2.021071e+15       1.000000      9.900000  2.760000e+02\n",
       "25%    11578.25000  2.021071e+15      20.000000    402.000000  1.302000e+04\n",
       "50%    23155.50000  2.021071e+15      50.000000    500.000000  3.301000e+04\n",
       "75%    34732.75000  2.021071e+15     100.000000    900.000000  8.080000e+04\n",
       "max    46310.00000  2.021071e+15  484850.000000  22396.000000  5.280000e+07"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "b28ed446d832f0b1e9fa0883cd1490b5c0a3c61bf24c333e459a0434b10dd033"
  },
  "kernelspec": {
   "display_name": "Python 3.8.5 64-bit ('base': conda)",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}